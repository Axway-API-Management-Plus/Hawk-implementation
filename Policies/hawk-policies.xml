<entityStoreData xmlns="http://www.vordel.com/2005/06/24/entityStore">
<metaInfo flags="138">
	<exportRoots>
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
			</key>
		</key>
		<key type='NetService'>
			<id field='name' value='Service'/>
			<key type='HTTP'>
				<id field='name' value='Default Services'/>
				<key type='XMLFirewall'>
					<id field='uriprefix' value='/fake'/>
					<id field='httpMethod' value='*'/>
				</key>
			</key>
		</key>
		<key type='CacheManager'>
			<id field='name' value='Cache Manager'/>
			<key type='Cache'>
				<id field='name' value='HAWK Nonce'/>
			</key>
		</key>
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Fake Backend'/>
			</key>
		</key>
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='HAWK-enabled Test Endpoint'/>
			</key>
		</key>
		<key type='NetService'>
			<id field='name' value='Service'/>
			<key type='HTTP'>
				<id field='name' value='Default Services'/>
				<key type='XMLFirewall'>
					<id field='uriprefix' value='/hawk'/>
					<id field='httpMethod' value='*'/>
				</key>
			</key>
		</key>
		<key type='AuthProfilesGroup'>
			<id field='name' value='Auth Profiles'/>
			<key type='BasicAuthGroup'>
				<id field='name' value='HTTP Basic'/>
				<key type='BasicProfile'>
					<id field='name' value='Node Manager Admin'/>
				</key>
			</key>
		</key>
		<key type='PortalConfiguration'>
			<id field='name' value='Portal Config'/>
		</key>
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
			</key>
		</key>
		<key type='ESConfiguration'>
			<id field='name' value='Entity Store Configuration'/>
		</key>
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
			</key>
		</key>
	</exportRoots>
	<typeVersions>
		<type name="AddHTTPHeaderFilter" version="5"/>
		<type name="AttributeCompare" version="1"/>
		<type name="AuthProfilesGroup" version="0"/>
		<type name="BasicAuthGroup" version="0"/>
		<type name="BasicProfile" version="0"/>
		<type name="Cache" version="0"/>
		<type name="CacheAttributeFilter" version="1"/>
		<type name="CacheManager" version="1"/>
		<type name="ChangeMessageFilter" version="0"/>
		<type name="CircuitContainer" version="1"/>
		<type name="CircuitDelegateFilter" version="0"/>
		<type name="CircuitReference" version="1"/>
		<type name="CompareAttributeFilter" version="0"/>
		<type name="ConnectToURLFilter" version="4"/>
		<type name="ConnectionFilter" version="15"/>
		<type name="ConversionFilter" version="0"/>
		<type name="CreateMessageKeyFilter" version="1"/>
		<type name="ESConfiguration" version="19"/>
		<type name="Entity" version="0"/>
		<type name="ExceptionFilter" version="0"/>
		<type name="ExtractRESTAttributesFilter" version="2"/>
		<type name="Filter" version="5"/>
		<type name="FilterCircuit" version="4"/>
		<type name="HTTP" version="4"/>
		<type name="IsCachedAttributeFilter" version="1"/>
		<type name="JSONAddNodeFilter" version="0"/>
		<type name="JavaProcess" version="0"/>
		<type name="JavaScriptFilter" version="2"/>
		<type name="LoadableModule" version="2"/>
		<type name="NamedAuthnProfile" version="0"/>
		<type name="NamedGroup" version="0"/>
		<type name="NamedLoadableModule" version="0"/>
		<type name="NamedTopLevelGroup" version="0"/>
		<type name="NativeModule" version="0"/>
		<type name="NetService" version="5"/>
		<type name="PortableCircuitReference" version="0"/>
		<type name="PortalConfiguration" version="24"/>
		<type name="Process" version="0"/>
		<type name="Reflector" version="0"/>
		<type name="RemoveHTTPHeaderFilter" version="0"/>
		<type name="RestoreContentBodyFromAttributeFilter" version="1"/>
		<type name="RootChild" version="0"/>
		<type name="SaveToFileFilter" version="2"/>
		<type name="SetAttributeFilter" version="0"/>
		<type name="SetHTTPStatusCode" version="0"/>
		<type name="SetResponseStatusFilter" version="0"/>
		<type name="SocketProtocol" version="1"/>
		<type name="SoftCircuitReference" version="0"/>
		<type name="StoreContentBodyToAttributeFilter" version="0"/>
		<type name="TraceFilter" version="3"/>
		<type name="URIHandler" version="4"/>
		<type name="XMLFirewall" version="9"/>
	</typeVersions>
	<realizedTypes><![CDATA[
<entityStoreData>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="RootChild"/>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="RootChild" name="LoadableModule">
        <constant name="_version" type="integer" value="2"/>
        <constant name="loadorder" type="integer" value="1000000"/>
        <field cardinality="?" name="classloader" type="^ClassLoader"/>

        </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="LoadableModule" name="NativeModule">
        <constant name="_version" type="integer" value="0"/>
                <constant name="class" type="string" value="com.vordel.dwe.NativeModule"/>
        </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="NativeModule" name="SocketProtocol">
        <constant name="_version" type="integer" value="1"/>
        <componentType name="Interface"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="SocketProtocol" name="HTTP">
        <constant name="_version" type="integer" value="4"/>
        <constant name="class" type="string" value="com.vordel.dwe.http.HTTP"/>
        <componentType name="URIHandler"/>
        <componentType name="VirtualHost"/>
        <field cardinality="1" default="" isKey="true" name="name" type="string"/> <!--  ES needs name -->
        <field cardinality="?" default="-1" name="corsProfile" type="@CORS"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="LoadableModule" name="NamedLoadableModule">
        <constant name="_version" type="integer" value="0"/>
		<field cardinality="1" isKey="true" name="name" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="NamedLoadableModule" name="PortalConfiguration">
    <constant name="_version" type="integer" value="24"/>
    <constant name="class" type="string" value="com.vordel.apiportal.config.PortalConfiguration"/>
    <constant name="loadorder" type="integer" value="5000"/>

    <field cardinality="?" name="smtpServer" type="^SMTPServer"/>
    <field cardinality="?" name="ldapServer" type="^LdapDirectory"/>
    <field cardinality="1" name="filterCircuit" type="^FilterCircuit"/>

    <field default="1" name="useEmbedded" type="boolean"/> <!-- if true, ignore "ldapServer", and assume the embedded solution pack is present. -->
    <field default="cn=apiadmin,ou=organizations,ou=APIPortal" name="adminDN" type="string"/>
    <field default="ou=organizations,ou=APIPortal" name="organizationRoot" type="string"/>
    <field default="ou=APIPortal" name="portalRoot" type="string"/>
    <field default="ou=organizations" name="orgDn" type="string"/>
    <field default="Community" name="communityName" type="string"/>
    <field default="apiadmin" name="adminName" type="string"/>
    <field default="apiadmin@localhost" name="adminEmail" type="string"/>
    <field default="0" name="ldapPort" type="integer"/>
	
    <field default="" name="latestRestApiVersionUri" type="string"/>

    <field default="CASSANDRA" name="quotaCaching" type="string"/>
    <field default="30" name="quotaCachingMinWindowSecs" type="integer"/>
    <field default="ONE" name="quotaReadConsistency" type="string"/>
    <field default="ONE" name="quotaWriteConsistency" type="string"/>
	
	<field default="0" name="vapiPollerInitialDelayMs" type="long"/>
	<field default="200" name="vapiPollerPeriodMs" type="long"/>
	<field default="5000" name="vapiPollerStopWaitMs" type="long"/>
	<field default="0" name="vapiNotifierCorePoolSize" type="integer"/>
	<field default="-1" name="vapiNotifierMaxPoolSize" type="integer"/>
	<field default="60000" name="vapiNotifierKeepAliveMs" type="long"/>
	<field default="5000" name="vapiNotifierStopWaitMs" type="long"/>
	<field default="1" name="lifecycleSchedulerCorePoolSize" type="integer"/>
    <field default="5000" name="lifecycleSchedulerStopWaitMs" type="long"/>
    <field default="5000" name="asyncExecutorStopWaitMs" type="long"/>
	
	<field default="80" name="systemQuotaWarnThresholdPercent" type="integer"/>
	<field default="80" name="applicationQuotaWarnThresholdPercent" type="integer"/>
	
	<field default="false" name="excludeApiDeprecatedHeader" type="boolean"/>
	<field default="false" name="excludeApiRetireTimeHeader" type="boolean"/>
	
	<field default="" name="oauth2Hostname" type="string"/>
	<field default="" name="oauth2Port" type="string"/>
	<field default="/api/oauth/authorize" name="oauth2LoginPath" type="string"/>
	<field default="/api/oauth/authorize" name="oauth2TokenRequestPath" type="string"/>
	<field default="/api/oauth/token" name="oauth2TokenPath" type="string"/>
	
	<field default="false" name="usrprovEnabled" type="boolean"/>
	<field cardinality="*" name="usrprovAuthNCircuit" type="^FilterCircuit"/>
	<field cardinality="*" name="usrprovGetUserInfoCircuit" type="^FilterCircuit"/>
	<field cardinality="*" name="usrprovAccountCreateSuccessCircuit" type="^FilterCircuit"/>
	<field cardinality="*" name="usrprovAccountCreateFailureCircuit" type="^FilterCircuit"/>

    <field cardinality="*" name="apiregAuthenticationPolicies" type="^FilterCircuit"/>
    <field cardinality="*" name="apiregRequestPolicies" type="^FilterCircuit"/>
    <field cardinality="*" name="apiregRoutingPolicies" type="^FilterCircuit"/>
    <field cardinality="*" name="apiregResponsePolicies" type="^FilterCircuit"/>
    <field cardinality="*" name="apiregOAuthTokenInfoPolicies" type="^FilterCircuit"/>
    <field cardinality="1" name="promotionCircuit" type="^FilterCircuit"/>    
    <field cardinality="*" name="apiregOAuthTokenStores" type="^AccessTokenPersist"/>
    <field cardinality="*" name="apiregOAuthClientProfiles" type="^OAuthAppProfile"/>
	
	<field cardinality="1" default="false" name="metricsStoringEnabled" type="boolean"/>
	<field cardinality="1" default="-1" name="dbConn" type="^DbConnection"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="NamedLoadableModule" name="CacheManager">
        <constant name="_version" type="integer" value="1"/>
	   	<constant name="class" type="string" value="com.vordel.circuit.cache.CacheContainer"/>
        <constant name="loadorder" type="integer" value="1"/>
        <componentType cardinality="*" name="Cache"/>
      <!-- peer provider -->
      <field cardinality="1" default="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory" name="peerProviderClass" type="string"/>
      <field cardinality="1" default="," name="peerProviderPropertySeparator" type="string"/>
      <field cardinality="1" default="peerDiscovery=automatic,multicastGroupAddress=230.0.0.1,multicastGroupPort=4446, timeToLive=1" name="peerProviderProperties" type="string"/>
      <!-- peer listener -->
      <field cardinality="1" default="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory" name="peerListenerClass" type="string"/>
      <field cardinality="1" default="," name="peerListenerPropertySeparator" type="string"/>
      <field cardinality="1" default="hostName=127.0.0.1,port=40001,socketTimeoutMillis=120000" name="peerListenerProperties" type="string"/>
	  <!-- NotifyCacheReplicators when refreshed -->
	  <field cardinality="1" default="1" name="notifyCacheReplicators" type="boolean"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="ESConfiguration">
        <constant name="_version" type="integer" value="19"/>
        <!--
            Give this singleton a key.
        -->
        <field isKey="true" name="name" type="string"/>
        <!-- 
            We use this field to verify that the passphrase for the 
            encryped data is synchronized between the server and client, and
            between multiple invocations of the client
        -->
        <field name="passphraseTest" type="encrypted"/>
        <field name="version" type="string"/>
        <!-- The product key should never change for the lifetime of the product -->
        <field name="productKey" type="string"/>
        <field cardinality="?" name="gitrev" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="RootChild" name="Process">
        <constant name="_version" type="integer" value="0"/> <!-- Common features to all processes created by Vordel software. -->
		<field isKey="true" name="name" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Process" name="JavaProcess">
        <constant name="_version" type="integer" value="0"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="JavaProcess" name="NetService">
    <constant name="_version" type="integer" value="5"/>
    <!-- Static type-field. -->
    <constant name="executableImage" type="string" value="vshell"/>
    <componentType name="LoadableModule"/>
    <componentType name="ClassLoader"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="CircuitContainer">
    <constant name="_version" type="integer" value="1"/>
    <componentType cardinality="*" name="FilterCircuit"/>
    <componentType cardinality="*" name="CircuitContainer"/>
    <componentType cardinality="*" name="MVProperty"/>
    <field isKey="true" name="name" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="FilterCircuit">
        <constant name="_version" type="integer" value="4"/>
		<componentType cardinality="*" name="Filter"/>
		<componentType cardinality="1" name="BoundCircuit"/>
		<componentType cardinality="*" name="Property"/>
		<field cardinality="1" name="start" type="@Filter"/>
		<field cardinality="?" name="fault" type="@Filter"/>
		<field isKey="true" name="name" type="string"/>
		<field cardinality="1" default="3" name="logMask" type="integer"/>

		<field cardinality="?" name="description" type="string"/>		
		<field cardinality="1" name="category" type="@PolicyCategory">
            <defaultRef>
                <key type="PolicyCategoryGroup">
                  <id field="name" value="Policy Categories"/>
                  <key type="PolicyCategory">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="RootChild" name="NamedTopLevelGroup">
        <constant name="_version" type="integer" value="0"/>
		<field isKey="true" name="name" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="NamedTopLevelGroup" name="AuthProfilesGroup"> 
        <constant name="_version" type="integer" value="0"/>
	<componentType cardinality="*" name="OAuthGroup"/>
	<componentType cardinality="*" name="SAMLGroup"/>
	<componentType cardinality="*" name="ApiKeyGroup"/>
	<componentType cardinality="*" name="BasicAuthGroup"/>
	<componentType cardinality="*" name="KerberosGroup"/> 
	<componentType cardinality="*" name="ApiKeySignerGroup"/> 
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="NamedGroup">
        <constant name="_version" type="integer" value="0"/>
		<field isKey="true" name="name" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="NamedGroup" name="BasicAuthGroup">
    <constant name="_version" type="integer" value="0"/>
    <componentType cardinality="*" name="BasicProfile"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="URIHandler">
        <constant name="_version" type="integer" value="4"/>
        <constant name="class" type="string" value="com.vordel.dwe.http.URIHandler"/>
		<field cardinality="1" default="" isKey="true" name="uriprefix" type="string"/>
        <field cardinality="1" default="*" isKey="true" name="httpMethod" type="string"/>
    	<field cardinality="1" default="LONGEST" name="pathMatching" type="string"/> <!-- EXACT, LONGEST -->
        <field cardinality="?" default="-1" name="corsProfile" type="@CORS"/>
    	<field cardinality="1" default="HTTP" name="corsUsage" type="string"/> <!-- HTTP, URIHANDLER -->
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="URIHandler" name="XMLFirewall">
    <constant name="_version" type="integer" value="9"/>
    <constant name="class" type="string" value="com.vordel.dwe.http.HTTPPlugin"/>
    <constant name="loadorder" type="integer" value="2000000"/>
    <componentType cardinality="*" name="CircuitReference"/>
    <componentType cardinality="*" name="URIHandler"/>
    <field default="1" name="evaluate" type="boolean"/>
    <field cardinality="1" name="filterCircuit" type="^FilterCircuit"/>
    <field cardinality="1" default="2" name="logMask" type="integer"/>
    <field cardinality="1" default="0" name="payloadMask" type="integer"/>
    <field cardinality="1" default="1" name="enabled" type="boolean"/>
    <field cardinality="1" default="0" name="enableAccessLogging" type="boolean"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Entity" name="CircuitReference">
    <constant name="_version" type="integer" value="1"/>
    <componentType cardinality="*" name="Property"/>
    <field isKey="true" name="name" type="string"/>
    <field cardinality="1" name="priority" type="integer"/>
    <field cardinality="?" name="circuitPK" type="@FilterCircuit"/>
    <!-- The evaluation of the referenced circuit is conditional. By default evaluation is enabled. -->
    <field cardinality="1" default="true" name="evaluate" type="boolean"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="CircuitReference" name="SoftCircuitReference">
    <constant name="_version" type="integer" value="0"/>
    <!-- 
      Override the circuitPK reference, making it a string value which can be interpreted as a reference 
      at run time.
    -->
    <field cardinality="?" name="circuitPK" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="CircuitReference" name="PortableCircuitReference">
    <constant name="_version" type="integer" value="0"/>
    <field cardinality="?" name="circuitPK" type="^FilterCircuit"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Entity" name="Cache">
        <constant name="_version" type="integer" value="0"/>
    <!-- required -->
    <field isKey="true" name="name" type="string"/>
    <field cardinality="1" default="1000" name="maxElementsInMemory" type="integer"/>
    <field cardinality="1" default="1000" name="maxElementsOnDisk" type="integer"/>
    <field cardinality="1" default="true" name="eternal" type="boolean"/>
    <field cardinality="1" default="true" name="overflowToDisk" type="boolean"/>
    <!-- optional -->
    <field cardinality="1" default="0" name="timeToIdleSeconds" type="long"/>
    <field cardinality="1" default="0" name="timeToLiveSeconds" type="long"/>
    <field cardinality="1" default="false" name="diskPersistent" type="boolean"/>
    <field cardinality="1" default="120" name="diskExpiryThreadIntervalSeconds" type="long"/>    
    <field cardinality="1" default="30" name="diskSpoolBufferSizeMB" type="integer"/>
    <field cardinality="1" default="LRU" name="memoryStoreEvictionPolicy" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="false" extends="Entity" name="AttributeCompare">
      <constant name="_version" type="integer" value="1"/>
      <field isKey="true" name="attrName" type="string"/>
      <field default="CONTAINS" isKey="true" name="matchType" type="string"/>
      <field isKey="true" name="expression" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="NamedAuthnProfile">
    <constant name="_version" type="integer" value="0"/>
    <field cardinality="1" isKey="true" name="name" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="NamedAuthnProfile" name="BasicProfile">
    <constant name="_version" type="integer" value="0"/>
    <field cardinality="1" default="basic" name="httpAuthType" type="string"/>
    <field cardinality="1" name="httpAuthUser" type="string"/>
    <field cardinality="1" name="httpAuthPass" type="encrypted"/>
    <field cardinality="1" default="1" name="httpSendCredsWithoutPrompt" type="boolean"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="Filter">
        <constant name="_version" type="integer" value="5"/>
        <field cardinality="?" name="successNode" type="@Filter"/>
        <field cardinality="?" name="failureNode" type="@Filter"/>
        <field isKey="true" name="name" type="string"/>
        <field cardinality="1" default="2" name="logMask" type="integer"/>
        <field cardinality="1" default="Filter aborted due to exception" name="logFatal" type="string"/>
        <field cardinality="1" default="Filter failed" name="logFailure" type="string"/>
        <field cardinality="1" default="Filter passed" name="logSuccess" type="string"/>
        <field cardinality="1" name="category" type="@Category">
            <defaultRef>
                <key type="CategoryGroup">
                  <id field="name" value="Filter Categories"/>
                  <key type="Category">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
      <field cardinality="1" default="0" name="abortProcessingOnLogError" type="boolean"/>
      <field cardinality="1" default="SERVICE" name="logMaskType" type="string"/>
      <field cardinality="*" name="classloader" type="^ClassLoader"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SetAttributeFilter">
        <constant name="_version" type="integer" value="0"/>
  
    <!-- Name of the Filter class that encapsulates this configuration entity -->
    <constant name="class" type="string" value="com.vordel.circuit.attribute.SetAttributeFilter"/>
    
    <!-- List of the configuration parameters, their types, and their default values -->
    <field cardinality="1" default="" name="messageAttribute" type="string"/>	
    <field cardinality="1" default="" name="attributeValue" type="string"/>	
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="StoreContentBodyToAttributeFilter">
          <constant name="_version" type="integer" value="0"/>
		  <constant name="class" type="string" value="com.vordel.circuit.body.StoreContentBodyToAttributeFilter"/>
		  <field cardinality="1" default="store.content.body" name="attributeToUse" type="string"/>	
        </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="RestoreContentBodyFromAttributeFilter">
          <constant name="_version" type="integer" value="1"/>
		  <constant name="class" type="string" value="com.vordel.circuit.body.RestoreContentBodyFromAttributeFilter"/>
		  <field cardinality="1" default="${store.content.body}" name="attributeToUse" type="string"/>	
        </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SaveToFileFilter">
		<constant name="_version" type="integer" value="2"/>
		<constant name="class" type="string" value="com.vordel.circuit.file.SaveToFileFilter"/>
		<field cardinality="1" default="${id}.out" name="fileName" type="string"/>
		<field cardinality="1" default="${environment.VINSTDIR}/message-archive" name="directory" type="string"/>
		<field cardinality="1" default="1000" name="maxFileSize" type="integer"/>
		<field cardinality="1" default="500" name="maxNumberFiles" type="integer"/>
		<field cardinality="1" default="0" name="includeHeaders" type="boolean"/>
		<field cardinality="1" default="0" name="includeRequestLine" type="boolean"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="RemoveHTTPHeaderFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.conversion.RemoveHTTPHeaderFilter"/>
		<field cardinality="1" name="headerName" type="string"/>	
        <field cardinality="1" default="0" name="errorNoHeader" type="boolean"/>	
         </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="ExtractRESTAttributesFilter">
    <constant name="_version" type="integer" value="2"/>
    <constant name="class" type="string" value="com.vordel.circuit.attribute.ExtractRESTAttributesFilter"/>
    <field cardinality="1" default="1" name="useHeaders" type="boolean"/>
    <field cardinality="1" default="1" name="useQueryString" type="boolean"/>
    <field cardinality="1" default="params.query" name="queryAttributePrefix" type="string"/>
    <field cardinality="1" default="0" name="decode" type="boolean"/>
    <field cardinality="1" name="category" type="@Category">
      <defaultRef>
        <key type="CategoryGroup">
          <id field="name" value="Filter Categories"/>
          <key type="Category">
            <id field="name" value="attribute"/>
          </key>
        </key>
      </defaultRef>
    </field>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="JSONAddNodeFilter">
        <constant name="_version" type="integer" value="0"/>
        <constant name="class" type="string" value="com.vordel.circuit.json.JSONAddNodeFilter"/>
        <field name="expression" type="string"/>
        <field cardinality="1" default="0" name="expressionType" type="integer"/> 	
        <field cardinality="1" default="0" name="insertLocationType" type="integer"/> 
        <field name="objectFieldName" type="string"/>
        <field name="content" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CacheAttributeFilter">
        <constant name="_version" type="integer" value="1"/>	    
	    <constant name="class" type="string" value="com.vordel.circuit.cache.CacheAttributeFilter"/>
        <field cardinality="1" name="cacheToUse" type="^Cache"/>
	    <field cardinality="1" default="message.key" name="keyAttributeName" type="string"/>
		<field cardinality="1" default="content.body" name="attributeName" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="AddHTTPHeaderFilter">
        <constant name="_version" type="integer" value="5"/>
		<constant name="class" type="string" value="com.vordel.circuit.conversion.AddHTTPHeaderFilter"/>
		<field cardinality="1" name="headerName" type="string"/>	
        <field cardinality="1" name="headerValue" type="string"/>	
        <field cardinality="1" default="0" name="base64Encode" type="boolean"/>
        <field cardinality="1" default="1" name="overwriteExistingHeader" type="boolean"/>
        <field cardinality="1" default="httpheaders" name="addWhere" type="string"/>
        </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="IsCachedAttributeFilter">
        <constant name="_version" type="integer" value="1"/>	    
	    <constant name="class" type="string" value="com.vordel.circuit.cache.IsCachedAttributeFilter"/>
        <field cardinality="1" name="cacheToUse" type="^Cache"/>
	    <field cardinality="1" default="message.key" name="keyAttributeName" type="string"/>
		<field cardinality="1" default="content.body" name="attributeName" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CircuitDelegateFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.CircuitDelegateFilter"/>
		<field cardinality="?" name="circuitPK" type="@FilterCircuit"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CreateMessageKeyFilter">
        <constant name="_version" type="integer" value="1"/>	    
	    <constant name="class" type="string" value="com.vordel.circuit.cache.CreateMessageKeyFilter"/>
	    <field cardinality="1" default="content.body" name="uniqueAttributeName" type="string"/>
	    <field cardinality="1" default="message.key" name="outputAttributeName" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Filter" name="ConversionFilter">
        <constant name="_version" type="integer" value="0"/>
		<field cardinality="?" name="outputContentType" type="string"/> 
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="ConversionFilter" name="ChangeMessageFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.conversion.ChangeMessageFilter"/>
		<field cardinality="1" default="" name="body" type="string"/>	
         </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="JavaScriptFilter">
        <constant name="_version" type="integer" value="2"/>
		<constant name="class" type="string" value="com.vordel.circuit.script.ScriptFilter"/>
		<field cardinality="1" default="function invoke(msg)         {            return true;         }" name="script" type="string"/>
		<field cardinality="1" default="js" name="engineName" type="string"/>
        <field cardinality="*" name="requiredProperties" type="string"/>
        <field cardinality="*" name="generatedProperties" type="string"/>
        <field cardinality="*" name="consumedProperties" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CompareAttributeFilter">
        <constant name="_version" type="integer" value="0"/>
        <constant name="class" type="string" value="com.vordel.circuit.attribute.CompareAttributeFilter"/>
        <componentType name="AttributeCompare"/>
        <field default="MATCH_ALL" name="matchingRule" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="ExceptionFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.basic.ExceptionFilter"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="ConnectionFilter">
    <constant name="_version" type="integer" value="15"/>
    <constant name="class" type="string" value="com.vordel.circuit.net.ConnectionFilter"/>
    <componentType cardinality="1" name="SaveToFileFilter"/>
    <field cardinality="?" name="profile" type="^NamedAuthnProfile"/>

    <!-- SSL Specific -->
    <field cardinality="*" name="caCerts" type="^Certificate"/>
    <field cardinality="*" name="sslUsers" type="^Certificate"/>
    <field cardinality="1" default="true" name="useRootCerts" type="boolean"/>
    <field default="DEFAULT" name="ciphers" type="string"/> <!-- See OpenSSL "ciphers" manpage -->

    <field cardinality="?" default="0" name="sendProxyMode" type="boolean"/>	
    <field cardinality="?" default="0" name="forwardClientHostHeader" type="boolean"/>


    <field cardinality="1" default="false" name="transparentProxy" type="boolean"/>
    <field cardinality="1" default="false" name="sendReceivedContentHeaders" type="boolean"/>
    <field cardinality="1" default="true" name="handleRedirects" type="boolean"/>
    <field cardinality="1" default="false" name="performRetries" type="boolean"/>
    <field cardinality="*" name="retryHTTPRanges" type="@HTTPStatusClass"/>
    <field cardinality="1" default="5" name="retryCount" type="string"/>
    <field cardinality="1" default="500" name="retryLatency" type="string"/>
    <field cardinality="1" default="false" name="slaBreachAsFailure" type="boolean"/>
    <field cardinality="1" default="false" name="saveTransactionOnFailure" type="boolean"/>
    <field cardinality="1" default="false" name="runPolicyOnConnectionFailure" type="boolean"/>
    <field cardinality="?" name="connectionFailurePolicy" type="@FilterCircuit"/>
    <field cardinality="?" name="proxyServer" type="^ProxyServer"/>
    <field cardinality="?" default="0" name="stickyness" type="integer"/>
    <field cardinality="?" default="unnamed" name="stickyCookieName" type="string"/>
    <field cardinality="?" default="600000" name="stickyCookieExpiry" type="long"/>
    <field cardinality="?" default="" name="stickyCookiePath" type="string"/>
    <field cardinality="?" default="" name="stickyCookieDomain" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="ConnectionFilter" name="ConnectToURLFilter">
        <constant name="_version" type="integer" value="4"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.ConnectToURLFilter"/>
		<field cardinality="1" default="${http.request.uri}" name="url" type="string"/>	
		<field cardinality="1" default="${http.request.verb}" name="method" type="string"/>	
		<field cardinality="1" default="${content.body}" name="body" type="string"/>	
		<field cardinality="1" default="${http.headers}" name="protoHeaders" type="string"/>	
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SetHTTPStatusCode">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.SetHTTPStatusFilter"/>
        <field cardinality="1" default="200" name="httpResponseStatus" type="integer"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="SetHTTPStatusCode" name="Reflector">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.ReflectFilter"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SetResponseStatusFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.basic.SetResponseStatusFilter"/>                    
        <field cardinality="1" default="2" name="responseStatus" type="integer"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="TraceFilter">
        <constant name="_version" type="integer" value="3"/>
		    <constant name="class" type="string" value="com.vordel.circuit.basic.TraceFilter"/>
        <field cardinality="?" name="traceMsg" type="string"/>
        <field cardinality="1" default="5" name="traceLevel" type="integer"/>
        <field cardinality="1" default="1" name="traceAttributes" type="boolean"/>
        <field cardinality="1" default="0" name="traceBody" type="boolean"/>
        <field cardinality="1" default="0" name="doIndent" type="boolean"/>
    </entityType>
</entityStoreData>
	]]></realizedTypes>
</metaInfo>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SetResponseStatusFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Successfully set the response status</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='ExceptionFilter'>
					<id field='name' value='Abort'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to set the response status</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Set Response Status</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="responseStatus"><value>3</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>SetResponseStatusFilter error. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
	</key>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='CompareAttributeFilter'>
					<id field='name' value='token_type == &quot;hawk&quot; ? '/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="name"><value>Add HAWK Key to OAuth2 Token Response</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="PortableCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/fake'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>CUSTOM_POLICY_REQ</value></fval>
	<fval name="priority"><value>1</value></fval>
	<fval name="evaluate"><value>true</value></fval>
	<fval name="circuitPK"><value contentType="reference">-1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="XMLFirewall">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
		</key>
	</key>
	<fval name="uriprefix"><value>/fake</value></fval>
	<fval name="payloadMask"><value>0</value></fval>
	<fval name="pathMatching"><value>LONGEST</value></fval>
	<fval name="corsUsage"><value>HTTP</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="enableAccessLogging"><value>0</value></fval>
	<fval name="httpMethod"><value>*</value></fval>
	<fval name="filterCircuit"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='HAWK'/><key type='FilterCircuit'><id field='name' value='Fake Backend'/></key></key>	</value></fval>
	<fval name="corsProfile"><value contentType="reference">-1</value></fval>
	<fval name="evaluate"><value>1</value></fval>
	<fval name="enabled"><value>1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitDelegateFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='HAWK-enabled Test Endpoint'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in calling policy shortcut</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='HAWK-enabled Test Endpoint'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Remove all Headers'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in calling policy shortcut</value></fval>
	<fval name="failureNode"><value contentType="reference">-1</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Validate HAWK Credentials</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in calling policy shortcut circuit. Error: ${circuit.exception}</value></fval>
	<fval name="circuitPK"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='CreateMessageKeyFilter'>
					<id field='name' value='Hash the nonce (for Replay Protection)'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="script"><value>importPackage(Packages.javax.crypto);&#xA;importPackage(Packages.java.security);&#xA;importPackage(Packages.java.io);&#xA;importPackage(Packages.com.vordel.trace);&#xA;importPackage(Packages.com.vordel.common.base64);&#xA;importPackage(Packages.javax.crypto.spec);&#xA;importPackage(Packages.java.nio.charset);&#xA;&#xA;&#xA;function parseHawkHeader(header) {&#xA;  // the header variable can be something like this :&#xA;  //   Hawk id=&quot;my-sample-key&quot;, mac=&quot;WUsudR+2seHAGF+c/QCBu/mvfqu4dxumAPe2T/R1OWQ=&quot;,&#xA;  //        ts=&quot;1466424453&quot;, nonce=&quot;L8TKu/+n&quot;, hash=&quot;B/K97zTtFuOhug27fke4/Zgc4Myz4b/lZNgsQjy6fkc=&quot;&apos;;&#xA;  if (header != null &amp;&amp; header.startsWith(&quot;Hawk &quot;)) {&#xA;    var count = 0;&#xA;    var hawkHeaders = {};&#xA;    var regex = new RegExp(&apos;[ ,]*(([a-z]+)=&quot;([^&quot;]*)&quot;)&apos;, &quot;g&quot;);&#xA;    var match = regex.exec(header);&#xA;    while (match != null &amp;&amp; count &lt; 32) { // safeguard against potential infinite loop&#xA;      hawkHeaders[match[2]] = match[3];&#xA;      match = regex.exec(header);&#xA;      count++;&#xA;    }&#xA;    return hawkHeaders;&#xA;  } else {&#xA;    return null;&#xA;  }&#xA;}&#xA;&#xA;function getHostAndPort(msg) {&#xA;  var hostHeader = msg.get(&quot;http.header.Host&quot;);&#xA;  var proto = msg.get(&quot;http.request.protocol&quot;);&#xA;  var components = hostHeader.split(&quot;:&quot;);&#xA;  var port = null;&#xA;  var hostname = hostHeader;&#xA;  if (components.length &gt; 1) {&#xA;    port = components[components.length - 1]; // Port is always the last item&#xA;    hostname = hostHeader.substr(0, hostHeader.lastIndexOf(&quot;:&quot;));&#xA;  }&#xA;  return [ hostname, port ];&#xA;}&#xA;&#xA;function computeNormalizedString(msg, headers) {&#xA;  var method = msg.get(&quot;http.request.verb&quot;);&#xA;  var url = msg.get(&quot;http.request.uri&quot;);&#xA;  var hostAndPort = getHostAndPort(msg);&#xA;&#xA;  var normalized = &quot;hawk.1.header\n&quot;&#xA;                + (headers.ts || &quot;&quot;) + &quot;\n&quot;&#xA;                + (headers.nonce || &quot;&quot;) + &quot;\n&quot;&#xA;                + method + &quot;\n&quot;&#xA;                + url + &quot;\n&quot;&#xA;                + hostAndPort[0] + &quot;\n&quot;&#xA;                + hostAndPort[1] + &quot;\n&quot;&#xA;                + (headers.hash || &quot;&quot;) + &quot;\n&quot;&#xA;                + (headers.ext || &quot;&quot;) + &quot;\n&quot;;&#xA;&#xA;  if (headers.app != null) {&#xA;    normalized += headers.app + &quot;\n&quot; + (headers.dlg || &quot;&quot;) + &quot;\n&quot;;&#xA;  }&#xA;&#xA;  return normalized;&#xA;}&#xA;&#xA;function computeBodyHash(msg) {&#xA;  var hash = MessageDigest.getInstance(&quot;SHA-256&quot;);&#xA;  var body = msg.get(&quot;content.body&quot;);&#xA;&#xA;  // Wait for the complete body to be available&#xA;  if (! body.contentAvailable()) {&#xA;    body.bufferInput();&#xA;  }&#xA;&#xA;  // Header&#xA;  var charset = Charset.forName(&quot;US-ASCII&quot;);&#xA;  hash.update(charset.encode(&quot;hawk.1.payload\n&quot;).array());&#xA;&#xA;  // Content-Type&#xA;  var contentType = msg.get(&quot;http.header.Content-Type&quot;) || &quot;&quot;;&#xA;  contentType = contentType.split(&quot;;&quot;)[0].replace(&quot;^\s+|\s+$&quot;, &apos;&apos;).toLowerCase();&#xA;  Trace.info(&quot;Content-Type: &quot; + contentType);&#xA;  contentType += &quot;\n&quot;;&#xA;  hash.update(charset.encode(contentType).array());&#xA;&#xA;  // Compute the hash over the whole body&#xA;  var baos = new ByteArrayOutputStream();&#xA;  body.write(baos, 0);&#xA;  hash.update(baos.toByteArray());&#xA;  hash.update(charset.encode(&quot;\n&quot;).array());&#xA;  var hash = hash.digest();&#xA;&#xA;  // Encode it in Base64&#xA;  return Encoder.encode(hash);&#xA;}&#xA;&#xA;function computeHawkSignature(normalizedString, key) {&#xA;  var rawkey = Decoder.decode(key);&#xA;  var keyspec = new SecretKeySpec(rawkey, &quot;HmacSHA256&quot;);&#xA;  var charset = Charset.forName(&quot;US-ASCII&quot;);&#xA;&#xA;  // Compute the hmac&#xA;  var hmac = Mac.getInstance(&quot;HmacSHA256&quot;);&#xA;  hmac.init(keyspec);&#xA;  var signature = hmac.doFinal(charset.encode(normalizedString).array());&#xA;&#xA;  // Encode it in Base64&#xA;  return Encoder.encode(signature);&#xA;}&#xA;&#xA;function invoke(msg) {&#xA;  var headers = msg.get(&quot;http.header.Authorization&quot;);&#xA;  Trace.info(&quot;Authorization Header: &quot; + headers);&#xA;&#xA;  var hawkHeaders = parseHawkHeader(headers);&#xA;  Trace.info(&quot;Decoded Hawk Headers: &quot; + JSON.stringify(hawkHeaders));&#xA;&#xA;  var normalizedString = computeNormalizedString(msg, hawkHeaders);&#xA;  Trace.info(&quot;Normalized String: [&quot; + normalizedString + &quot;]&quot;);&#xA;&#xA;  var secretKey = msg.get(&quot;hawk.key&quot;);&#xA;  Trace.info(&quot;Secret HAWK Key: &quot; + secretKey);&#xA;&#xA;  var computedHawkSignature = computeHawkSignature(normalizedString, secretKey);&#xA;  Trace.info(&quot;Computed Hawk Signature: &quot; + computedHawkSignature);&#xA;  if (computedHawkSignature != hawkHeaders.mac) {&#xA;    Trace.error(&quot;Hawk Signature differs ! (&quot; + computedHawkSignature + &quot; vs &quot; + hawkHeaders.mac + &quot;)&quot;);&#xA;    return false;&#xA;  }&#xA;&#xA;  if (hawkHeaders.hash != null &amp;&amp; hawkHeaders.hash != &quot;&quot;) {&#xA;    var computedBodyHash = computeBodyHash(msg);&#xA;    Trace.info(&quot;Computed Body Hash: &quot; + computedBodyHash);&#xA;&#xA;    if (computedBodyHash != hawkHeaders.hash) {&#xA;      Trace.error(&quot;Body Hash differs ! (&quot; + computedBodyHash + &quot; vs &quot; + hawkHeaders.hash + &quot;)&quot;);&#xA;      return false;&#xA;    }&#xA;  }&#xA;&#xA;  // Return the HAWK Nonce to main policy for replay protection&#xA;  msg.put(&quot;hawk.nonce&quot;, hawkHeaders.nonce);&#xA;&#xA;  return true;&#xA;}&#xA;</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='AddHTTPHeaderFilter'>
					<id field='name' value='Add HTTP Header &quot;WWW-Authenticate: Hawk&quot;'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Verify HAWK Signature</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>js</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SoftCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/hawk'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>GLOBAL_POLICY_RSP</value></fval>
	<fval name="priority"><value>4</value></fval>
	<fval name="evaluate"><value>1</value></fval>
	<fval name="circuitPK"><value>system.policy.response</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="AddHTTPHeaderFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="base64Encode"><value>0</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='SetHTTPStatusCode'>
					<id field='name' value='HTTP Status Code 401: Authorization Required'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="headerName"><value>WWW-Authenticate</value></fval>
	<fval name="addWhere"><value>httpheaders</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="headerValue"><value>Hawk</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logSuccess"><value>Success in adding the HTTP header to the message</value></fval>
	<fval name="overwriteExistingHeader"><value>1</value></fval>
	<fval name="logFailure"><value>Failed in adding the HTTP header to the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Add HTTP Header &quot;WWW-Authenticate: Hawk&quot;</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in adding the HTTP header to the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SetHTTPStatusCode">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="httpResponseStatus"><value>401</value></fval>
	<fval name="logSuccess"><value>Successfully set the HTTP status code</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='SetResponseStatusFilter'>
					<id field='name' value='Set Response Status'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to set the HTTP status code</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>HTTP Status Code 401: Authorization Required</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error occurred while setting the HTTP status code. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="PortableCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/hawk'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>CUSTOM_POLICY_REQ</value></fval>
	<fval name="priority"><value>1</value></fval>
	<fval name="evaluate"><value>true</value></fval>
	<fval name="circuitPK"><value contentType="reference">-1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='SetAttributeFilter'>
					<id field='name' value='Fetch the matching key from KPS'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="script"><value>importPackage(Packages.com.vordel.trace);&#xA;&#xA;function parseHawkHeader(header) {&#xA;  // the header variable can be something like this :&#xA;  //   Hawk id=&quot;my-sample-key&quot;, mac=&quot;WUsudR+2seHAGF+c/QCBu/mvfqu4dxumAPe2T/R1OWQ=&quot;,&#xA;  //        ts=&quot;1466424453&quot;, nonce=&quot;L8TKu/+n&quot;, hash=&quot;B/K97zTtFuOhug27fke4/Zgc4Myz4b/lZNgsQjy6fkc=&quot;&apos;;&#xA;  if (header != null &amp;&amp; header.startsWith(&quot;Hawk &quot;)) {&#xA;    var count = 0;&#xA;    var hawkHeaders = {};&#xA;    var regex = new RegExp(&apos;[ ,]*(([a-z]+)=&quot;([^&quot;]*)&quot;)&apos;, &quot;g&quot;);&#xA;    var match = regex.exec(header);&#xA;    while (match != null &amp;&amp; count &lt; 32) { // safeguard against potential infinite loop&#xA;      hawkHeaders[match[2]] = match[3];&#xA;      match = regex.exec(header);&#xA;      count++;&#xA;    }&#xA;    return hawkHeaders;&#xA;  } else {&#xA;    return null;&#xA;  }&#xA;}&#xA;&#xA;function invoke(msg)         {&#xA;  var headers = msg.get(&quot;http.header.Authorization&quot;);&#xA;  Trace.info(&quot;Authorization Header: &quot; + headers);&#xA;&#xA;  var hawkHeaders = parseHawkHeader(headers);&#xA;  Trace.info(&quot;Decoded Hawk Headers: &quot; + JSON.stringify(hawkHeaders));&#xA;&#xA;  if (hawkHeaders != null) {&#xA;    msg.put(&quot;hawk.id&quot;, hawkHeaders.id);&#xA;  }&#xA;&#xA;&#x9;return hawkHeaders != null;&#xA;}&#xA;</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='AddHTTPHeaderFilter'>
					<id field='name' value='Add HTTP Header &quot;WWW-Authenticate: Hawk&quot;'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Extract the keyid from the HAWK Header</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>js</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="XMLFirewall">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
		</key>
	</key>
	<fval name="uriprefix"><value>/hawk</value></fval>
	<fval name="payloadMask"><value>0</value></fval>
	<fval name="pathMatching"><value>LONGEST</value></fval>
	<fval name="corsUsage"><value>HTTP</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="enableAccessLogging"><value>0</value></fval>
	<fval name="httpMethod"><value>*</value></fval>
	<fval name="filterCircuit"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='HAWK'/><key type='FilterCircuit'><id field='name' value='HAWK-enabled Test Endpoint'/></key></key>	</value></fval>
	<fval name="corsProfile"><value contentType="reference">-1</value></fval>
	<fval name="evaluate"><value>1</value></fval>
	<fval name="enabled"><value>1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SoftCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/hawk'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>GLOBAL_POLICY_REQ</value></fval>
	<fval name="priority"><value>0</value></fval>
	<fval name="evaluate"><value>1</value></fval>
	<fval name="circuitPK"><value>system.policy.request</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="PortableCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/hawk'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>CUSTOM_POLICY_RSP</value></fval>
	<fval name="priority"><value>3</value></fval>
	<fval name="evaluate"><value>true</value></fval>
	<fval name="circuitPK"><value contentType="reference">-1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ExtractRESTAttributesFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Extract the keyid from the HAWK Header'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="decode"><value>1</value></fval>
	<fval name="queryAttributePrefix"><value>params.query</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Extract HTTP Headers</value></fval>
	<fval name="useHeaders"><value>1</value></fval>
	<fval name="useQueryString"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='attribute'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
	</key>
	<fval name="name"><value>Validate HAWK Credentials</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='ExtractRESTAttributesFilter'>
					<id field='name' value='Extract HTTP Headers'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="fault"><value contentType="reference">-1</value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='HAWK-enabled Test Endpoint'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='HAWK-enabled Test Endpoint'/>
				<key type='ChangeMessageFilter'>
					<id field='name' value='Set Message &quot;Hello, World !&quot;'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="script"><value>importPackage(Packages.com.vordel.trace);&#xA;&#xA;function clearHeaders(msg, property) {&#xA;  var headers = msg.get(property);&#xA;&#xA;  // Since we cannot go through an iterator while removing elements,&#xA;  // we have to build a list of header names first&#xA;  var names = [];&#xA;  var it = headers.getNames();&#xA;  while (it.hasNext()) {&#xA;    var name = it.next();&#xA;    names.push(name);&#xA;  }&#xA;&#xA;  // And then iterate over this list to remove all headers&#xA;  var len = names.length;&#xA;  for (var i = 0; i &lt; len; i++) {&#xA;    var name = names[i];&#xA;    headers.remove(name);&#xA;  }&#xA;}&#xA;&#xA;function invoke(msg) {&#xA;  clearHeaders(msg, &quot;http.content.headers&quot;)&#xA;  clearHeaders(msg, &quot;http.headers&quot;)&#xA;  return true;&#xA;}&#xA;</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Remove all Headers</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>js</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SetAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Set the attribute value</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Verify HAWK Signature'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to set the attribute value</value></fval>
	<fval name="messageAttribute"><value>hawk.key</value></fval>
	<fval name="attributeValue"><value>${kps.hawkKeys[hawk.id].secret}</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='AddHTTPHeaderFilter'>
					<id field='name' value='Add HTTP Header &quot;WWW-Authenticate: Hawk&quot;'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Fetch the matching key from KPS</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while setting the attribute value. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="RemoveHTTPHeaderFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in removing the HTTP header from the message</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='SetAttributeFilter'>
					<id field='name' value='Set authentication.subject.id'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in removing the HTTP header from the message</value></fval>
	<fval name="headerName"><value>Authorization</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Remove Authorization Header</value></fval>
	<fval name="errorNoHeader"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in removing the HTTP header from the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="HTTP">
	<key type='NetService'>
		<id field='name' value='Service'/>
	</key>
	<fval name="name"><value>Default Services</value></fval>
	<fval name="corsProfile"><value contentType="reference">
		<key type='CORSGroup'>
			<id field='name' value='CORS Profiles'/>
			<key type='CORS'>
				<id field='name' value='CORS Anywhere'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="AuthProfilesGroup">
	<fval name="name"><value>Auth Profiles</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="RestoreContentBodyFromAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Persist HAWK Key'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in restoring the message</value></fval>
	<fval name="logFailure"><value>Failed to restore the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Restore Message</value></fval>
	<fval name="attributeToUse"><value>${store.content.body}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in restoring the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="StoreContentBodyToAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Persist HAWK Key'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in storing the message to attribute </value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
				<key type='ChangeMessageFilter'>
					<id field='name' value='Set REST Payload'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to store the message in attribute</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Store Message</value></fval>
	<fval name="attributeToUse"><value>store.content.body</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in storing the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ConnectToURLFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Persist HAWK Key'/>
		</key>
	</key>
	<fval name="sendReceivedContentHeaders"><value>0</value></fval>
	<fval name="retryLatency"><value>500</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
				<key type='RestoreContentBodyFromAttributeFilter'>
					<id field='name' value='Restore Message'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="stickyCookieName"><value>unnamed</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="body"><value>${content.body}</value></fval>
	<fval name="slaBreachAsFailure"><value>0</value></fval>
	<fval name="protoHeaders"><value>${content.headers}</value></fval>
	<fval name="logFailure"><value>Failed to route request to endpoint.</value></fval>
	<fval name="retryHTTPRanges"><value contentType="reference">-1</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
				<key type='RestoreContentBodyFromAttributeFilter'>
					<id field='name' value='Restore Message'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="runPolicyOnConnectionFailure"><value>0</value></fval>
	<fval name="stickyness"><value>0</value></fval>
	<fval name="ciphers"><value>DEFAULT</value></fval>
	<fval name="forwardClientHostHeader"><value>0</value></fval>
	<fval name="useRootCerts"><value>1</value></fval>
	<fval name="transparentProxy"><value>0</value></fval>
	<fval name="sslUsers"><value contentType="reference">-1</value></fval>
	<fval name="stickyCookiePath"><value></value></fval>
	<fval name="method"><value>PUT</value></fval>
	<fval name="stickyCookieDomain"><value></value></fval>
	<fval name="proxyServer"><value contentType="reference">-1</value></fval>
	<fval name="retryCount"><value>5</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="profile"><value contentType="reference">
<key type='AuthProfilesGroup'><id field='name' value='Auth Profiles'/><key type='BasicAuthGroup'><id field='name' value='HTTP Basic'/><key type='BasicProfile'><id field='name' value='Node Manager Admin'/></key></key></key>	</value></fval>
	<fval name="handleRedirects"><value>1</value></fval>
	<fval name="stickyCookieExpiry"><value>600000</value></fval>
	<fval name="url"><value>https://localhost:8090/api/router/service/instance-1/api/kps/hawkKeys/${authentication.subject.id}</value></fval>
	<fval name="connectionFailurePolicy"><value contentType="reference">-1</value></fval>
	<fval name="logSuccess"><value>Successfully routed request to endpoint</value></fval>
	<fval name="performRetries"><value>0</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Route to Node Manager - KPS REST API</value></fval>
	<fval name="saveTransactionOnFailure"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error occurred while routing request to endpoint. Error: ${circuit.exception}</value></fval>
	<fval name="sendProxyMode"><value>0</value></fval>
	<fval name="caCerts"></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Persist HAWK Key'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
				<key type='ConnectToURLFilter'>
					<id field='name' value='Route to Node Manager - KPS REST API'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Set REST Payload</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="body"><value>{&#xA;  &quot;id&quot;: &quot;${authentication.subject.id}&quot;,&#xA;  &quot;secret&quot;: &quot;${hawk.key}&quot;&#xA;}</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="outputContentType"><value>application/json</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SaveToFileFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Persist HAWK Key'/>
			<key type='ConnectToURLFilter'>
				<id field='name' value='Route to Node Manager - KPS REST API'/>
			</key>
		</key>
	</key>
	<fval name="fileName"><value>${id}.out</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="maxFileSize"><value>1000</value></fval>
	<fval name="includeHeaders"><value>0</value></fval>
	<fval name="directory"><value>${environment.VINSTDIR}/message-archive</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="maxNumberFiles"><value>500</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Persistence Details</value></fval>
	<fval name="includeRequestLine"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SoftCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/fake'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>GLOBAL_POLICY_REQ</value></fval>
	<fval name="priority"><value>0</value></fval>
	<fval name="evaluate"><value>1</value></fval>
	<fval name="circuitPK"><value>system.policy.request</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="PortableCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/fake'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>CUSTOM_POLICY_RSP</value></fval>
	<fval name="priority"><value>3</value></fval>
	<fval name="evaluate"><value>true</value></fval>
	<fval name="circuitPK"><value contentType="reference">-1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
	</key>
	<fval name="name"><value>Persist HAWK Key</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
				<key type='StoreContentBodyToAttributeFilter'>
					<id field='name' value='Store Message'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SoftCircuitReference">
	<key type='NetService'>
		<id field='name' value='Service'/>
		<key type='HTTP'>
			<id field='name' value='Default Services'/>
			<key type='XMLFirewall'>
				<id field='uriprefix' value='/fake'/>
				<id field='httpMethod' value='*'/>
			</key>
		</key>
	</key>
	<fval name="name"><value>GLOBAL_POLICY_RSP</value></fval>
	<fval name="priority"><value>4</value></fval>
	<fval name="evaluate"><value>1</value></fval>
	<fval name="circuitPK"><value>system.policy.response</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Cache">
	<key type='CacheManager'>
		<id field='name' value='Cache Manager'/>
	</key>
	<fval name="overflowToDisk"><value>1</value></fval>
	<fval name="eternal"><value>1</value></fval>
	<fval name="timeToLiveSeconds"><value>0</value></fval>
	<fval name="timeToIdleSeconds"><value>0</value></fval>
	<fval name="diskPersistent"><value>0</value></fval>
	<fval name="maxElementsInMemory"><value>1000</value></fval>
	<fval name="diskExpiryThreadIntervalSeconds"><value>120</value></fval>
	<fval name="name"><value>HAWK Nonce</value></fval>
	<fval name="maxElementsOnDisk"><value>1000</value></fval>
	<fval name="diskSpoolBufferSizeMB"><value>30</value></fval>
	<fval name="memoryStoreEvictionPolicy"><value>LRU</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="BasicProfile">
	<key type='AuthProfilesGroup'>
		<id field='name' value='Auth Profiles'/>
		<key type='BasicAuthGroup'>
			<id field='name' value='HTTP Basic'/>
		</key>
	</key>
	<fval name="httpAuthUser"><value>admin</value></fval>
	<fval name="httpAuthType"><value>basic</value></fval>
	<fval name="name"><value>Node Manager Admin</value></fval>
	<fval name="httpAuthPass"><value>Y2hhbmdlbWU=</value></fval>
	<fval name="httpSendCredsWithoutPrompt"><value>1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='HAWK-enabled Test Endpoint'/>
		</key>
	</key>
	<fval name="httpResponseStatus"><value>200</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Return Success</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="TraceFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='HAWK-enabled Test Endpoint'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='HAWK-enabled Test Endpoint'/>
				<key type='Reflector'>
					<id field='name' value='Return Success'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="traceBody"><value>1</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="traceMsg"><value></value></fval>
	<fval name="traceLevel"><value>5</value></fval>
	<fval name="doIndent"><value>0</value></fval>
	<fval name="logSuccess"><value>Traced the message properties</value></fval>
	<fval name="logFailure"><value>Failed to trace the message properties</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Trace Filter</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="traceAttributes"><value>1</value></fval>
	<fval name="logFatal"><value>Error while tracing the message properties. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
	</key>
	<fval name="name"><value>HAWK-enabled Test Endpoint</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='HAWK-enabled Test Endpoint'/>
				<key type='CircuitDelegateFilter'>
					<id field='name' value='Validate HAWK Credentials'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="fault"><value contentType="reference">-1</value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='HAWK-enabled Test Endpoint'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='HAWK-enabled Test Endpoint'/>
				<key type='TraceFilter'>
					<id field='name' value='Trace Filter'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Set Message &quot;Hello, World !&quot;</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="body"><value>Hello, ${hawk.id} !</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="outputContentType"><value>text/plain</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitContainer">
	<fval name="name"><value>HAWK</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CacheManager">
	<fval name="peerProviderProperties"><value>peerDiscovery=automatic,multicastGroupAddress=230.0.0.1,multicastGroupPort=4446, timeToLive=1</value></fval>
	<fval name="peerListenerProperties"><value>hostName=127.0.0.1,port=40001,socketTimeoutMillis=120000</value></fval>
	<fval name="peerListenerClass"><value>net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory</value></fval>
	<fval name="name"><value>Cache Manager</value></fval>
	<fval name="peerListenerPropertySeparator"><value>,</value></fval>
	<fval name="peerProviderPropertySeparator"><value>,</value></fval>
	<fval name="notifyCacheReplicators"><value>1</value></fval>
	<fval name="peerProviderClass"><value>net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="PortalConfiguration">
	<fval name="useEmbedded"><value>1</value></fval>
	<fval name="organizationRoot"><value>ou=organizations,ou=APIPortal</value></fval>
	<fval name="adminDN"><value>cn=apiadmin,ou=organizations,ou=APIPortal</value></fval>
	<fval name="ldapPort"><value>0</value></fval>
	<fval name="lifecycleSchedulerStopWaitMs"><value>5000</value></fval>
	<fval name="excludeApiRetireTimeHeader"><value>false</value></fval>
	<fval name="oauth2TokenRequestPath"><value>/api/oauth/authorize</value></fval>
	<fval name="usrprovEnabled"><value>0</value></fval>
	<fval name="vapiNotifierMaxPoolSize"><value>-1</value></fval>
	<fval name="quotaReadConsistency"><value>ONE</value></fval>
	<fval name="usrprovAuthNCircuit"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='Sample Policies'/><key type='CircuitContainer'><id field='name' value='API Management Identity Provider'/><key type='CircuitContainer'><id field='name' value='LDAP'/><key type='FilterCircuit'><id field='name' value='Authenticate LDAP Account'/></key></key></key></key>	</value></fval>
	<fval name="quotaWriteConsistency"><value>ONE</value></fval>
	<fval name="vapiPollerInitialDelayMs"><value>0</value></fval>
	<fval name="vapiNotifierStopWaitMs"><value>5000</value></fval>
	<fval name="communityName"><value>Community</value></fval>
	<fval name="apiregAuthenticationPolicies"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='HAWK'/><key type='FilterCircuit'><id field='name' value='Validate HAWK Credentials'/></key></key>	</value></fval>
	<fval name="asyncExecutorStopWaitMs"><value>5000</value></fval>
	<fval name="usrprovAccountCreateSuccessCircuit"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='Sample Policies'/><key type='CircuitContainer'><id field='name' value='API Management Identity Provider'/><key type='FilterCircuit'><id field='name' value='Account Creation Success'/></key></key></key>	</value></fval>
	<fval name="systemQuotaWarnThresholdPercent"><value>80</value></fval>
	<fval name="oauth2Hostname"><value></value></fval>
	<fval name="adminEmail"><value>root@localhost</value></fval>
	<fval name="orgDn"><value>ou=organizations</value></fval>
	<fval name="quotaCaching"><value>CASSANDRA</value></fval>
	<fval name="latestRestApiVersionUri"><value></value></fval>
	<fval name="applicationQuotaWarnThresholdPercent"><value>80</value></fval>
	<fval name="usrprovGetUserInfoCircuit"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='Sample Policies'/><key type='CircuitContainer'><id field='name' value='API Management Identity Provider'/><key type='CircuitContainer'><id field='name' value='LDAP'/><key type='FilterCircuit'><id field='name' value='Retrieve LDAP Account Information'/></key></key></key></key>	</value></fval>
	<fval name="portalRoot"><value>ou=APIPortal</value></fval>
	<fval name="usrprovAccountCreateFailureCircuit"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='Sample Policies'/><key type='CircuitContainer'><id field='name' value='API Management Identity Provider'/><key type='FilterCircuit'><id field='name' value='Account Creation Failure'/></key></key></key>	</value></fval>
	<fval name="oauth2TokenPath"><value>/api/oauth/token</value></fval>
	<fval name="adminName"><value>apiadmin</value></fval>
	<fval name="excludeApiDeprecatedHeader"><value>false</value></fval>
	<fval name="smtpServer"><value contentType="reference">
<key type='SMTPServerGroup'><id field='name' value='SMTP Servers'/><key type='SMTPServer'><id field='name' value='Portal SMTP'/></key></key>	</value></fval>
	<fval name="lifecycleSchedulerCorePoolSize"><value>1</value></fval>
	<fval name="vapiPollerPeriodMs"><value>200</value></fval>
	<fval name="oauth2LoginPath"><value>/api/oauth/authorize</value></fval>
	<fval name="name"><value>Portal Config</value></fval>
	<fval name="quotaCachingMinWindowSecs"><value>30</value></fval>
	<fval name="vapiNotifierCorePoolSize"><value>0</value></fval>
	<fval name="vapiPollerStopWaitMs"><value>5000</value></fval>
	<fval name="oauth2Port"><value></value></fval>
	<fval name="vapiNotifierKeepAliveMs"><value>60000</value></fval>
	<fval name="metricsStoringEnabled"><value>false</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ESConfiguration">
	<fval name="passphraseTest"><value>aHR0cDsvL3d3dy52b3JkZWwuY29t</value></fval>
	<fval name="name"><value>Entity Store Configuration</value></fval>
	<fval name="productKey"><value>VordelGateway</value></fval>
	<fval name="version"><value>7.4.1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="TraceFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='AddHTTPHeaderFilter'>
					<id field='name' value='Add HTTP Header &quot;WWW-Authenticate: Hawk&quot;'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="traceBody"><value>0</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="traceMsg"><value>Replay attack attempted !</value></fval>
	<fval name="traceLevel"><value>2</value></fval>
	<fval name="doIndent"><value>0</value></fval>
	<fval name="logSuccess"><value>Traced the message properties</value></fval>
	<fval name="logFailure"><value>Failed to trace the message properties</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Log that replay attempt</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="traceAttributes"><value>0</value></fval>
	<fval name="logFatal"><value>Error while tracing the message properties. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CreateMessageKeyFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Message key created from attribute.</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='IsCachedAttributeFilter'>
					<id field='name' value='Replay Protection'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failure during creationo of message key from attribute.</value></fval>
	<fval name="uniqueAttributeName"><value>hawk.nonce</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Hash the nonce (for Replay Protection)</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="outputAttributeName"><value>message.key</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error during message creation of message key from attribute. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="IsCachedAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='TraceFilter'>
					<id field='name' value='Log that replay attempt'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logSuccess"><value>Found the key in the message attribute cache.</value></fval>
	<fval name="keyAttributeName"><value>message.key</value></fval>
	<fval name="logFailure"><value>Failure while looking for key in the message attribute cache.</value></fval>
	<fval name="cacheToUse"><value contentType="reference">
<key type='CacheManager'><id field='name' value='Cache Manager'/><key type='Cache'><id field='name' value='HAWK Nonce'/></key></key>	</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='CacheAttributeFilter'>
					<id field='name' value='Flag the nonce as &quot;used&quot;'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Replay Protection</value></fval>
	<fval name="attributeName"><value>dummy</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while looking for key in the  message attribiute cache. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CacheAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Cached the message attribute.</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Validate HAWK Credentials'/>
				<key type='RemoveHTTPHeaderFilter'>
					<id field='name' value='Remove Authorization Header'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="keyAttributeName"><value>message.key</value></fval>
	<fval name="logFailure"><value>Failed to cache the message attribute.</value></fval>
	<fval name="cacheToUse"><value contentType="reference">
<key type='CacheManager'><id field='name' value='Cache Manager'/><key type='Cache'><id field='name' value='HAWK Nonce'/></key></key>	</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Flag the nonce as &quot;used&quot;</value></fval>
	<fval name="attributeName"><value>hawk.nonce</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while caching the message attribute. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="BasicAuthGroup">
	<key type='AuthProfilesGroup'>
		<id field='name' value='Auth Profiles'/>
	</key>
	<fval name="name"><value>HTTP Basic</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SetAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Set the attribute value</value></fval>
	<fval name="logFailure"><value>Failed to set the attribute value</value></fval>
	<fval name="messageAttribute"><value>authentication.subject.id</value></fval>
	<fval name="attributeValue"><value>${hawk.id}</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Set authentication.subject.id</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while setting the attribute value. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Fake Backend'/>
		</key>
	</key>
	<fval name="httpResponseStatus"><value>200</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Reflect Message</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="NetService">
	<fval name="name"><value>Service</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ExceptionFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Validate HAWK Credentials'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in exception filter</value></fval>
	<fval name="logFailure"><value>Failure in exception filter</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Abort</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in calling exception filter. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Fake Backend'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Fake Backend'/>
				<key type='Reflector'>
					<id field='name' value='Reflect Message'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Set Message</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="body"><value>Hello, World !</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="outputContentType"><value>text/plain</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
	</key>
	<fval name="name"><value>Fake Backend</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Fake Backend'/>
				<key type='ChangeMessageFilter'>
					<id field='name' value='Set Message'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="AttributeCompare">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
			<key type='CompareAttributeFilter'>
				<id field='name' value='token_type == &quot;hawk&quot; ? '/>
			</key>
		</key>
	</key>
	<fval name="expression"><value>hawk</value></fval>
	<fval name="matchType"><value>IS</value></fval>
	<fval name="attrName"><value>params.query.token_type</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="TraceFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">-1</value></fval>
	<fval name="traceBody"><value>1</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="traceMsg"><value></value></fval>
	<fval name="traceLevel"><value>3</value></fval>
	<fval name="doIndent"><value>0</value></fval>
	<fval name="logSuccess"><value>Traced the message properties</value></fval>
	<fval name="logFailure"><value>Failed to trace the message properties</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Log Response for Debug</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="traceAttributes"><value>1</value></fval>
	<fval name="logFatal"><value>Error while tracing the message properties. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JSONAddNodeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='SetHTTPStatusCode'>
					<id field='name' value='HTTP Status : 200 OK'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="expression"><value>$</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="content"><value>{ &quot;key&quot;: &quot;${hawk.key}&quot;, &quot;id&quot;: &quot;${authentication.subject.id}&quot;, &quot;alg&quot;: &quot;HS256&quot; }</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="objectFieldName"><value>hawk</value></fval>
	<fval name="failureNode"><value contentType="reference">-1</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="insertLocationType"><value>1</value></fval>
	<fval name="name"><value>Insert the HAWK Key in the response</value></fval>
	<fval name="expressionType"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitDelegateFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
		</key>
	</key>
	<fval name="logSuccess"><value>Success in calling policy shortcut</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='JSONAddNodeFilter'>
					<id field='name' value='Insert the HAWK Key in the response'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in calling policy shortcut</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>Persist HAWK Key</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error in calling policy shortcut circuit. Error: ${circuit.exception}</value></fval>
	<fval name="circuitPK"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Persist HAWK Key'/>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SetHTTPStatusCode">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
		</key>
	</key>
	<fval name="httpResponseStatus"><value>200</value></fval>
	<fval name="logSuccess"><value>Successfully set the HTTP status code</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='TraceFilter'>
					<id field='name' value='Log Response for Debug'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to set the HTTP status code</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>HTTP Status : 200 OK</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error occurred while setting the HTTP status code. Error: ${circuit.exception}</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CompareAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
		</key>
	</key>
	<fval name="matchingRule"><value>MATCH_ALL</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Generate a new HAWK Key'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='TraceFilter'>
					<id field='name' value='Log Response for Debug'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="name"><value>token_type == &quot;hawk&quot; ? </value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='HAWK'/>
		<key type='FilterCircuit'>
			<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
		</key>
	</key>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='HAWK'/>
			<key type='FilterCircuit'>
				<id field='name' value='Add HAWK Key to OAuth2 Token Response'/>
				<key type='CircuitDelegateFilter'>
					<id field='name' value='Persist HAWK Key'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="script"><value>importPackage(Packages.com.vordel.trace);&#xA;importPackage(Packages.java.util);&#xA;importPackage(Packages.com.vordel.common.base64);&#xA;&#xA;function invoke(msg) {&#xA;  var gen = new Random();&#xA;  var bytes = java.lang.reflect.Array.newInstance (java.lang.Byte.TYPE, 32);&#xA;  gen.nextBytes(bytes);&#xA;  msg.put(&quot;hawk.key&quot;, Encoder.encode(bytes));&#xA;  return true;&#xA;}&#xA;</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="name"><value>Generate a new HAWK Key</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>js</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
</entity>
</entityStoreData>